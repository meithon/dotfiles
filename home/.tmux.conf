

# undercurl表示対応
set-option -g default-terminal "screen-256color"

set -ag terminal-overrides ",xterm-256color:Tc"
# set-option -g terminal-overrides ',xterm-256color:RGB'
set-option -g focus-events on # TODO: learn how this works

set -g prefix ^S
set -g base-index 1          # start indexing windows at 1 instead of 0
set -g detach-on-destroy off # don't exit from tmux when closing a session
set -g escape-time 0         # zero-out escape time delay
set -g history-limit 1000000 # increase history size (from 2,000)
set -g mouse on              # enable mouse support
set -g renumber-windows on   # renumber all windows when any window is closed
set -g set-clipboard on      # use system clipboard
set -g status-interval 3     # update the status bar every 3 seconds

# set -g status-left "#[fg=#073642,bg=#eee8d5,bold] #S #[fg=#eee8d5,bg=#7BBEF7,nobold,nounderscore,noitalics]#[fg=#15161E,bg=#7BBEF7,bold] #(whoami) #[fg=#7BBEF7,bg=#002b36]"
# set -g status-right "#[fg=#586e75,bg=#002b36,nobold,nounderscore,noitalics]#[fg=#93a1a1,bg=#586e75] #{prefix_highlight} #{?window_zoomed_flag,#[fg=red]Zoomed#[default],Not Zoomed}#[fg=#657b83,bg=#586e75,nobold,nounderscore,noitalics]#[fg=#93a1a1,bg=#657b83] #[fg=#BAC3C3,bg=#657b83,nobold,nounderscore,noitalics]#{?client_prefix,#[fg=#82EA94],}#[fg=#15161E,bg=#BAC3C3,bold]#{?client_prefix,#[bg=#82EA94],} #(echo #{pane_current_path} | sed 's#$HOME#~#g') "
# set -g status-left "#[fg=blue,bold,bg=#1e1e2e]  #S  "
# set -g status-right "#[fg=#b4befe,bold,bg=#1e1e2e]%a %Y-%m-%d 󱑒 %l:%M %p"

# set -ga status-right "#($HOME/.config/tmux/scripts/cal.sh)"
set -g status-justify left
set -g status-left-length 200    # increase length (from 10)
set -g status-right-length 200    # increase length (from 10)
set -g status-position top       # macOS / darwin style
# set -g status-position bottom       # macOS / darwin style
set -g status-style 'bg=#1e1e2e' # transparen#

# set -g window-status-current-format '#[fg=magenta,bg=#1e1e2e]*#I #W#{?window_zoomed_flag,(),} '
# setw -g window-status-current-format '#[fg=#002b36,bg=#eee8d5]#[fg=#6EA78E,bg=#eee8d5] #I #[fg=#eee8d5,bg=#6EA78E] #W #[fg=#6EA78E,bg=#002b36,nobold]'

set -g window-status-format '#[fg=gray,bg=#1e1e2e] #I #W'
set -g window-status-last-style 'fg=white,bg=black'
set -g default-terminal "${TERM}"
set -g message-command-style bg=default,fg=yellow
set -g message-style bg=default,fg=yellow
set -g mode-style bg=default,fg=yellow
setw -g mode-keys vi
set -g pane-active-border-style 'fg=magenta,bg=default'
set -g pane-border-style 'fg=brightblack,bg=default'

set -g @fzf-url-fzf-options '-p 60%,30% --prompt="   " --border-label=" Open URL "'
set -g @fzf-url-history-limit '2000'
set -g @t-bind ","
set -g @t-fzf-default-results 'sessions'
set -g @t-fzf-find-binding 'ctrl-l:change-prompt(  )+reload(fd -H -d 2 -t d -E .Trash . ~)'
set -g @t-fzf-prompt '  '
set -g @tmux-last-color on
set -g @tmux-last-pager 'nvim -'
set -g @tmux-last-prompt-pattern ' '
set -g @tmux-nerd-font-window-name-shell-icon ''
set -g @tmux-nerd-font-window-name-show-name false

bind r source-file ~/.tmux.conf \; display "Reloaded!"
# bind-key r rotate-window
bind-key R rotate-window -D
bind v split-window -h
bind s split-window -v
bind o select-pane -t :.+
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -n C-M-z resize-pane -Z
unbind C-z
bind a setw synchronize-panes \; display "synchronize-panes #{?pane_synchronized,on,off}"
bind Tab run-shell '
  current_window=$(tmux display-message -p "#{window_id}")
  last_window=$(tmux display-message -p "#{session_last_attached}")
  
  if [ "$(tmux display-message -p "#{window_zoomed_flag}")" = "1" ]; then
    tmux last-pane
    tmux resize-pane -Z
  else
    if tmux last-pane 2>/dev/null; then
      :
    else
      tmux last-window
    fi
  fi
'


# bind ] run-shell "filepath=/tmp/tmux-buffer/$(date +'%Y-%m-%d_%H-%M-%S'); mkdir -p $(dirname \$filepath) && tmux capture-pane -pS - > \$filepath && tmux display-message \"Pane captured to \$filepath\""


# ------------------------------------------------------------------------------------------
#  window management
# ------------------------------------------------------------------------------------------

bind -n C-M-c new-window

bind -n C-M-n next-window
bind -n C-M-p previous-window

bind -n C-M-r rotate-window 

bind -n C-M-v split-window -h
bind -n C-M-s split-window -v

# ------------------------------------------------------------------------------------------
#  pane management
# ------------------------------------------------------------------------------------------

bind -n C-M-h select-pane -L
bind -n C-M-j select-pane -D
bind -n C-M-k select-pane -U
bind -n C-M-l select-pane -R

# move pane to the far right/left/bottom/top
bind H splitw -fhb \; swapp -t ! \; killp -t !
#              │││    ├────────┘    ├───────┘
#              │││    │             └ kill the previous pane
#              │││    └ exchange the previous original pane with the current one
#              ││└ the new pane should be created to the left of or above target-pane
#              │└ full window height
#              └ creates a new pane spanning the full window height (with -h)
#                or full window width (with -v), instead of splitting the active pane
bind L splitw -fh  \; swapp -t ! \; killp -t !
bind J splitw -fv  \; swapp -t ! \; killp -t !
bind K splitw -fvb \; swapp -t ! \; killp -t !


bind -n C-M-y resize-pane -L 18
bind -n C-M-u resize-pane -D 12
bind -n C-M-i resize-pane -U 12
bind -n C-M-o resize-pane -R 18
bind -n C-M-m resize-pane -Z
# ペインをリサイズする
# bind -r y resize-pane -L 19
# bind -r u resize-pane -D 1j
# bind -r i resize-pane -U 13
# bind -r o resize-pane -R 18

# NOTE: <prefix> + I to install plugins
# Plugin manager
set -g @plugin 'tmux-plugins/tpm'
set -g @tmux-window-switcher-key-binding 'C-g'
set -g @tmux-window-switcher-width '50%'
set -g @tmux-window-switcher-height '90%'

# # extract text from the terminal
# set -g @plugin 'laktak/extrakto'
# # set -g @extrakto_split_size "15"
# # set -g @extrakto_clip_tool "xsel --input --cl@extrakto_popup_sizeipboard" # works better for nvim
# set -g @extrakto_copy_key "tab"      # use tab to copy to clipboard
# set -g @extrakto_insert_key "enter"  # use enter to insert selection
# set -g @extrakto_fzf_unset_default_opts "true"  # keep our custom FZF_DEFAULT_OPTS
# set -g @extrakto_fzf_header "i c f g" # for small screens shorten the fzf header
#
# set -g @extrakto_popup_size '120,20'

# yank like a easy-motion
# FIXME: not working
# set -g @plugin 'fcsonline/tmux-thumbs'

set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'
set -g @plugin 'mskelton/tmux-last' # <prefix>t

# A set of tmux options that should be acceptable to everyone.
set -g @plugin 'tmux-plugins/tmux-sensible'

# Session management
set -g @plugin 'omerxx/tmux-sessionx'

# session management
set -g @plugin 'sturob/tmux-teleport'

set -g @plugin 'b0o/tmux-autoreload'
set -g @tmux-autoreload-configs '~/.tmux.conf'
set-option -g @tmux-autoreload-entrypoints '~/.tmux.conf'

# Theme
set -g @plugin 'catppuccin/tmux'
set -g @catppuccin_flavour 'macchiato' # latte, frappe, macchiato, mocha
set -g @catppuccin_window_left_separator "█"
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator "█ "

set -g @plugin 'l-lin/tmux-window-switcher'


# セッションの現在位置をstatusに表示するためのmoduleの定義
# set -g @session_dots_format "#(tmux list-sessions | awk -v current=\"$(tmux display-message -p '#S')\" '{gsub(/:.*$/,\"\"); if ($1 == current) {printf \"#[fg=orange]●#[fg=default] \"} else {printf \"●\"}}')"

set -g status-right-length 100
set -g status-left-length 100
set -g status-left ""
# set -g status-right "#{E:@catppuccin_status_application}"
# set -agF status-right "#{E:@catppuccin_status_cpu}"
# set -ag status-right "#{E:@catppuccin_status_session}"
# set -ag status-right "#{E:@catppuccin_status_uptime}"
# set -agF status-right "#{E:@catppuccin_status_battery}"

# set -g status-right "#{E:@catppuccin_status_application}"
# set-option -g status-right "#[fg=colour255,bg=colour241] #(tmux list-sessions | awk -v current=\"$(tmux display-message -p '#S')\" '{gsub(/:.*$/,\"\"); if ($1 == current) {printf \"#[fg=orange]●#[fg=default] \"} else {printf \"●\"}}')"
# set -agF status-right "#{E:@catppuccin_status_kube}"

# set -g @plugin 'kiyoon/treemux'
# set -g @treemux-tree-nvim-init-file '~/.tmux/plugins/treemux/configs/treemux_init.lua'
# set -g @treemux-tree 'e'

# pick screen url, commit, digetst, etc
set -g @plugin 'Morantron/tmux-fingers'
set -g @fingers-key F

# set -g @plugin 'pawel-wiejacha/tmux-picker'
# set -g PICKER_KEY 'F'

# yank to system clipboard
set -g @plugin 'tmux-plugins/tmux-yank'

set -g @plugin 'meithon/tmux-panehop'
set -g @tmux_panehop_key 'j'


# # easy-motion
# set -g @plugin 'IngoMeyer441/tmux-easy-motion'
# set -g @easy-motion-prefix "Space"
# set -g @easy-motion-auto-begin-selection "true"


# prefix + Shift + P で前（左）に移動
bind-key -r 'P' swap-window -t -1\; select-window -t -1

# prefix + Shift + N で次（右）に移動
bind-key -r 'N' swap-window -t +1\; select-window -t +1

source-file ~/.config/zsh/plugin/tmux.zsh
bind-key -r "C-j" run-shell 'tmux-switch'
# FIXME: not working
# set -g @plugin 'olimorris/tmux-pomodoro-plus'
# # set -g @pomodoro_toggle 'm' 
# set -g status-right "#{pomodoro_status}"


set -g @plugin 'ddzero2c/tmux-easymotion'

bind-key -T copy-mode-vi C-v send-keys -X begin-selection \; send-keys -X rectangle-toggle;
bind-key -T copy-mode-vi v send-keys -X begin-selection;
bind-key -T copy-mode-vi V send-keys -X select-line;

# Removed Plugins
# I wanan not use vim keybind at tmux
# set -g @plugin 'christoomey/vim-tmux-navigator'
# Replaced by tmux-sessionx
# set -g @plugin 'joshmedeski/t-smart-tmux-session-manager'
# set -g @plugin 'tmux-plugins/tmux-yank'

run '~/.tmux/plugins/tpm/tpm'

bind -n C-M-m run-shell "sesh connect \"$(
  sesh list -t --icons | fzf-tmux -p 80%,70% \
    --no-sort --ansi --border-label ' sesh ' --prompt '⚡  ' \
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(⚡  )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(🪟  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(⚙️  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(📁  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(🔎  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(⚡  )+reload(sesh list --icons)' \
    --preview-window 'right:55%' \
    --preview 'sesh preview {}'
)\""
